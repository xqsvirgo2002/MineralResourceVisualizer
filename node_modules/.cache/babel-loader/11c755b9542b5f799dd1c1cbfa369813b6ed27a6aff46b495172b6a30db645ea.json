{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      mainPieData: [],\n      // 主饼图数据\n      subPieData: [] // 子饼图数据\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      // 注意：更换为您的实际JSON文件路径\n      axios.get('/mining_area_data.json').then(response => {\n        const data = response.data;\n        const totalArea = data.reduce((sum, item) => sum + item.AREA, 0);\n        const threshold = totalArea * 0.01; // 设置阈值为1%的总面积\n\n        this.mainPieData = data.filter(item => item.AREA >= threshold);\n        this.subPieData = data.filter(item => item.AREA < threshold);\n        this.createChart();\n      }).catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        series: [{\n          name: '主饼图',\n          type: 'pie',\n          selectedMode: 'single',\n          radius: [0, '30%'],\n          label: {\n            position: 'right'\n          },\n          data: this.mainPieData.map(item => ({\n            name: item.COUNTRY_NAME,\n            value: item.AREA\n          }))\n        }, {\n          name: '子饼图',\n          type: 'pie',\n          radius: ['40%', '55%'],\n          data: this.subPieData.map(item => ({\n            name: item.COUNTRY_NAME,\n            value: item.AREA\n          }))\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","name","data","mainPieData","subPieData","mounted","loadChartData","methods","get","then","response","totalArea","reduce","sum","item","AREA","threshold","filter","createChart","catch","error","console","chartDom","document","getElementById","myChart","init","option","tooltip","trigger","formatter","series","type","selectedMode","radius","label","position","map","COUNTRY_NAME","value","setOption"],"sources":["src/components/MiningAreaChart.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <h1>矿区面积分布</h1>\n    <div id=\"chart\" style=\"height: 500px; width: 100%;\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      mainPieData: [], // 主饼图数据\n      subPieData: [],  // 子饼图数据\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      // 注意：更换为您的实际JSON文件路径\n      axios.get('/mining_area_data.json')\n        .then(response => {\n          const data = response.data;\n          const totalArea = data.reduce((sum, item) => sum + item.AREA, 0);\n          const threshold = totalArea * 0.01; // 设置阈值为1%的总面积\n\n          this.mainPieData = data.filter(item => item.AREA >= threshold);\n          this.subPieData = data.filter(item => item.AREA < threshold);\n\n          this.createChart();\n        })\n        .catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        series: [\n          {\n            name: '主饼图',\n            type: 'pie',\n            selectedMode: 'single',\n            radius: [0, '30%'],\n            label: {\n              position: 'right',\n            },\n            data: this.mainPieData.map(item => ({\n              name: item.COUNTRY_NAME,\n              value: item.AREA\n            }))\n          },\n          {\n            name: '子饼图',\n            type: 'pie',\n            radius: ['40%', '55%'],\n            data: this.subPieData.map(item => ({\n              name: item.COUNTRY_NAME,\n              value: item.AREA\n            }))\n          }\n        ]\n      };\n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n\n<style>\n.chart-container {\n  width: 100%;\n  max-width: 1280px;\n  margin: auto;\n}\n\n#chart {\n  height: 500px;\n}\n</style>\n"],"mappings":"AAQA,OAAAA,KAAA;AACA,YAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACA;MACAP,KAAA,CAAAS,GAAA,2BACAC,IAAA,CAAAC,QAAA;QACA,MAAAR,IAAA,GAAAQ,QAAA,CAAAR,IAAA;QACA,MAAAS,SAAA,GAAAT,IAAA,CAAAU,MAAA,EAAAC,GAAA,EAAAC,IAAA,KAAAD,GAAA,GAAAC,IAAA,CAAAC,IAAA;QACA,MAAAC,SAAA,GAAAL,SAAA;;QAEA,KAAAR,WAAA,GAAAD,IAAA,CAAAe,MAAA,CAAAH,IAAA,IAAAA,IAAA,CAAAC,IAAA,IAAAC,SAAA;QACA,KAAAZ,UAAA,GAAAF,IAAA,CAAAe,MAAA,CAAAH,IAAA,IAAAA,IAAA,CAAAC,IAAA,GAAAC,SAAA;QAEA,KAAAE,WAAA;MACA,GACAC,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;IACA;IACAF,YAAA;MACA,MAAAI,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,OAAA,GAAAzB,OAAA,CAAA0B,IAAA,CAAAJ,QAAA;MACA,MAAAK,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA;QACA;QACAC,MAAA,GACA;UACA9B,IAAA;UACA+B,IAAA;UACAC,YAAA;UACAC,MAAA;UACAC,KAAA;YACAC,QAAA;UACA;UACAlC,IAAA,OAAAC,WAAA,CAAAkC,GAAA,CAAAvB,IAAA;YACAb,IAAA,EAAAa,IAAA,CAAAwB,YAAA;YACAC,KAAA,EAAAzB,IAAA,CAAAC;UACA;QACA,GACA;UACAd,IAAA;UACA+B,IAAA;UACAE,MAAA;UACAhC,IAAA,OAAAE,UAAA,CAAAiC,GAAA,CAAAvB,IAAA;YACAb,IAAA,EAAAa,IAAA,CAAAwB,YAAA;YACAC,KAAA,EAAAzB,IAAA,CAAAC;UACA;QACA;MAEA;MACAU,OAAA,CAAAe,SAAA,CAAAb,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
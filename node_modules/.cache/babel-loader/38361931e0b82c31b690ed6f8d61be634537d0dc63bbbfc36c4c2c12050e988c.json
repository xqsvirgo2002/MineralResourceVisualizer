{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('global_mining_area_per_country_v1.csv').then(response => {\n        Papa.parse(response.data, {\n          header: true,\n          complete: results => {\n            results.data.forEach(row => {\n              this.chartData.countries.push(row.COUNTRY_NAME);\n              this.chartData.areas.push(row.AREA);\n            });\n            this.createChart();\n          }\n        });\n      }).catch(error => console.error('Error loading the CSV file:', error));\n    },\n    createChart() {\n      const chart = echarts.init(document.getElementById('chart'));\n      const option = {\n        title: {\n          text: '各国矿区面积'\n        },\n        tooltip: {},\n        xAxis: {\n          type: 'category',\n          data: this.chartData.countries\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          type: 'bar',\n          data: this.chartData.areas\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","Papa","echarts","name","data","chartData","countries","areas","mounted","loadChartData","methods","get","then","response","parse","header","complete","results","forEach","row","push","COUNTRY_NAME","AREA","createChart","catch","error","console","chart","init","document","getElementById","option","title","text","tooltip","xAxis","type","yAxis","series","setOption"],"sources":["src/components/MiningAreaChart.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>矿区面积分布</h2>\n      <div id=\"chart\" style=\"height: 400px;\"></div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\nimport Papa from 'papaparse';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    }\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('global_mining_area_per_country_v1.csv')\n        .then(response => {\n          Papa.parse(response.data, {\n            header: true,\n            complete: (results) => {\n              results.data.forEach(row => {\n                this.chartData.countries.push(row.COUNTRY_NAME);\n                this.chartData.areas.push(row.AREA);\n              });\n              this.createChart();\n            }\n          });\n        })\n        .catch(error => console.error('Error loading the CSV file:', error));\n    },\n    createChart() {\n      const chart = echarts.init(document.getElementById('chart'));\n      const option = {\n        title: {\n          text: '各国矿区面积'\n        },\n        tooltip: {},\n        xAxis: {\n          type: 'category',\n          data: this.chartData.countries\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          type: 'bar',\n          data: this.chartData.areas\n        }]\n      };\n\n      chart.setOption(option);\n    }\n  }\n}\n  </script>\n  "],"mappings":";AAQA,OAAAA,KAAA;AACA,OAAAC,IAAA;AACA,YAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,SAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAT,KAAA,CAAAW,GAAA,0CACAC,IAAA,CAAAC,QAAA;QACAZ,IAAA,CAAAa,KAAA,CAAAD,QAAA,CAAAT,IAAA;UACAW,MAAA;UACAC,QAAA,EAAAC,OAAA;YACAA,OAAA,CAAAb,IAAA,CAAAc,OAAA,CAAAC,GAAA;cACA,KAAAd,SAAA,CAAAC,SAAA,CAAAc,IAAA,CAAAD,GAAA,CAAAE,YAAA;cACA,KAAAhB,SAAA,CAAAE,KAAA,CAAAa,IAAA,CAAAD,GAAA,CAAAG,IAAA;YACA;YACA,KAAAC,WAAA;UACA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,gCAAAA,KAAA;IACA;IACAF,YAAA;MACA,MAAAI,KAAA,GAAAzB,OAAA,CAAA0B,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;QACAC,KAAA;UACAC,IAAA;UACAhC,IAAA,OAAAC,SAAA,CAAAC;QACA;QACA+B,KAAA;UACAD,IAAA;QACA;QACAE,MAAA;UACAF,IAAA;UACAhC,IAAA,OAAAC,SAAA,CAAAE;QACA;MACA;MAEAoB,KAAA,CAAAY,SAAA,CAAAR,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
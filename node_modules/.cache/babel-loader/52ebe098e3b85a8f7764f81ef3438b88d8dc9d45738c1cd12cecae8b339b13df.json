{"ast":null,"code":"import * as echarts from 'echarts';\nimport mineralsData from '@/assets/minerals_production.json';\nexport default {\n  name: 'WorldMap',\n  components: {\n    // ...如果您使用 Element UI 的对话框组件...\n  },\n  data() {\n    return {\n      chart: null,\n      // ECharts 实例\n      selectedCountry: '',\n      selectedCountryMinerals: [],\n      dialogVisible: false,\n      searchQuery: ''\n    };\n  },\n  mounted() {\n    this.chart = echarts.init(document.getElementById('map'));\n    this.chart.setOption({\n      series: [{\n        type: 'map',\n        map: 'world'\n      }]\n    });\n    this.chart.on('click', this.handleCountryClick);\n  },\n  methods: {\n    handleBeforeClose(done) {\n      this.dialogVisible = false;\n      done();\n    },\n    handleCountryClick(params) {\n      this.selectedCountry = params.name;\n      this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n      this.dialogVisible = true;\n      this.highlightCountryOnMap(params.name);\n    },\n    searchCountry() {\n      if (!this.searchQuery) return;\n      this.selectedCountry = this.searchQuery;\n      this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n      this.dialogVisible = true;\n      this.highlightCountryOnMap(this.searchQuery);\n    },\n    highlightCountryOnMap(countryName) {\n      this.chart.setOption({\n        series: [{\n          type: 'map',\n          map: 'world',\n          data: [{\n            name: countryName,\n            itemStyle: {\n              areaColor: '#f60',\n              borderColor: '#000',\n              borderWidth: 1.5\n            }\n          }]\n        }]\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","mineralsData","name","components","data","chart","selectedCountry","selectedCountryMinerals","dialogVisible","searchQuery","mounted","init","document","getElementById","setOption","series","type","map","on","handleCountryClick","methods","handleBeforeClose","done","params","highlightCountryOnMap","searchCountry","countryName","itemStyle","areaColor","borderColor","borderWidth"],"sources":["src/components/WorldMap.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div class=\"search-container\">\n            <el-input v-model=\"searchQuery\" placeholder=\"输入国家名称\" class=\"search-input\"\n                @keyup.enter=\"searchCountry\"></el-input>\n            <el-button type=\"primary\" @click=\"searchCountry\">搜索</el-button>\n        </div>\n        <div id=\"map\"></div>\n        <el-dialog :visible.sync=\"dialogVisible\" :title=\"selectedCountry + ' 的矿产资源(单位：吨/立方米)'\" width=\"60%\"\n            :before-close=\"handleBeforeClose\" class=\"custom-dialog\">\n            <div v-if=\"selectedCountryMinerals.length\">\n                <ul class=\"mineral-list\">\n                    <li v-for=\"mineral in selectedCountryMinerals\" :key=\"mineral.Minerals\">\n                        {{ mineral.Minerals }}: {{ mineral.Production }}\n                    </li>\n                </ul>\n            </div>\n            <div v-else>\n                <p>未记录该国家矿产资源的信息。</p>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport mineralsData from '@/assets/minerals_production.json';\n\nexport default {\n    name: 'WorldMap',\n    components: {\n        // ...如果您使用 Element UI 的对话框组件...\n    },\n    data() {\n        return {\n            chart: null, // ECharts 实例\n            selectedCountry: '',\n            selectedCountryMinerals: [],\n            dialogVisible: false,\n            searchQuery: ''\n        };\n    },\n    mounted() {\n        this.chart = echarts.init(document.getElementById('map'));\n        this.chart.setOption({\n            series: [{\n                type: 'map',\n                map: 'world'\n            }]\n        });\n        this.chart.on('click', this.handleCountryClick);\n    },\n    methods: {\n        handleBeforeClose(done) {\n            this.dialogVisible = false;\n            done();\n        },\n        handleCountryClick(params) {\n            this.selectedCountry = params.name;\n            this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n            this.dialogVisible = true;\n            this.highlightCountryOnMap(params.name);\n        },\n        searchCountry() {\n            if (!this.searchQuery) return;\n            this.selectedCountry = this.searchQuery;\n            this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n            this.dialogVisible = true;\n            this.highlightCountryOnMap(this.searchQuery);\n        },\n        highlightCountryOnMap(countryName) {\n            this.chart.setOption({\n                series: [{\n                    type: 'map',\n                    map: 'world',\n                    data: [{\n                        name: countryName,\n                        itemStyle: {\n                            areaColor: '#f60',\n                            borderColor: '#000',\n                            borderWidth: 1.5\n                        }\n                    }]\n                }]\n            });\n        }\n    }\n}\n</script>\n\n<style>\n.search-container {\n    padding: 20px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.search-input {\n    margin-right: 10px;\n}\n\n.custom-dialog .el-dialog {\n    background-color: #f5f5f5;\n    border-radius: 8px;\n}\n\n.custom-dialog .el-dialog__header {\n    color: #333;\n    font-size: 18px;\n}\n\n.custom-dialog .el-dialog__body {\n    font-size: 16px;\n    color: #343434c6;\n}\n\n.mineral-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n.mineral-list li {\n    margin: 10px 0;\n    font-weight: bold;\n}\n\n.map-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 80vh;\n}\n\n#map {\n    width: 1500px;\n    height: 1200px;\n    margin-top: -20px;\n    z-index: 1;\n}\n</style>\n"],"mappings":"AAyBA,YAAAA,OAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACA;EAAA,CACA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,eAAA;MACAC,uBAAA;MACAC,aAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAL,KAAA,GAAAL,OAAA,CAAAW,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA,KAAAR,KAAA,CAAAS,SAAA;MACAC,MAAA;QACAC,IAAA;QACAC,GAAA;MACA;IACA;IACA,KAAAZ,KAAA,CAAAa,EAAA,eAAAC,kBAAA;EACA;EACAC,OAAA;IACAC,kBAAAC,IAAA;MACA,KAAAd,aAAA;MACAc,IAAA;IACA;IACAH,mBAAAI,MAAA;MACA,KAAAjB,eAAA,GAAAiB,MAAA,CAAArB,IAAA;MACA,KAAAK,uBAAA,GAAAN,YAAA,MAAAK,eAAA;MACA,KAAAE,aAAA;MACA,KAAAgB,qBAAA,CAAAD,MAAA,CAAArB,IAAA;IACA;IACAuB,cAAA;MACA,UAAAhB,WAAA;MACA,KAAAH,eAAA,QAAAG,WAAA;MACA,KAAAF,uBAAA,GAAAN,YAAA,MAAAK,eAAA;MACA,KAAAE,aAAA;MACA,KAAAgB,qBAAA,MAAAf,WAAA;IACA;IACAe,sBAAAE,WAAA;MACA,KAAArB,KAAA,CAAAS,SAAA;QACAC,MAAA;UACAC,IAAA;UACAC,GAAA;UACAb,IAAA;YACAF,IAAA,EAAAwB,WAAA;YACAC,SAAA;cACAC,SAAA;cACAC,WAAA;cACAC,WAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
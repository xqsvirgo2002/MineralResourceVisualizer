{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: [] // 初始化为一个空数组\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      // 注意：更换为您的实际JSON文件路径\n      axios.get('/mining_area_data.json').then(response => {\n        // 假设response.data是对象数组，每个对象都有COUNTRY_NAME和AREA属性\n        this.chartData = response.data.map(item => ({\n          name: item.COUNTRY_NAME,\n          // 饼图的\"name\"字段\n          value: item.AREA // 饼图的\"value\"字段\n        }));\n        this.createChart();\n      }).catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n          show: false // 不显示图例\n        },\n        series: [{\n          name: '矿区面积',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: this.chartData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          label: {\n            position: 'outer',\n            alignTo: 'none',\n            bleedMargin: 5\n          },\n          // 调整标签线的长度\n          labelLine: {\n            length: 20,\n            length2: 30\n          }\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","name","data","chartData","mounted","loadChartData","methods","get","then","response","map","item","COUNTRY_NAME","value","AREA","createChart","catch","error","console","chartDom","document","getElementById","myChart","init","option","tooltip","trigger","formatter","legend","show","series","type","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","label","position","alignTo","bleedMargin","labelLine","length","length2","setOption"],"sources":["src/components/MiningAreaChart.vue"],"sourcesContent":["\n<template>\n  <div class=\"chart-container\">\n    <h1>矿区面积分布</h1>\n    <div id=\"chart\" style=\"height: 400px; width: 100%;\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: [] // 初始化为一个空数组\n    }\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      // 注意：更换为您的实际JSON文件路径\n      axios.get('/mining_area_data.json')\n        .then(response => {\n          // 假设response.data是对象数组，每个对象都有COUNTRY_NAME和AREA属性\n          this.chartData = response.data.map(item => ({\n            name: item.COUNTRY_NAME, // 饼图的\"name\"字段\n            value: item.AREA         // 饼图的\"value\"字段\n          }));\n          this.createChart();\n        })\n        .catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b} : {c} ({d}%)'\n        },\n        legend: {\n    show: false // 不显示图例\n  },\n        series: [\n          {\n            name: '矿区面积',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: this.chartData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n            label: {\n              position: 'outer',\n              alignTo: 'none',\n              bleedMargin: 5\n            },\n            // 调整标签线的长度\n            labelLine: {\n              length: 20,\n              length2: 30\n            },\n          }\n        ]\n      };\n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n<style>\n.chart-container {\n  width: 100%;\n  /* 设置容器宽度为100% */\n  max-width: 1280px;\n  /* 或者设置一个最大宽度 */\n  margin: auto;\n  /* 若需要居中显示 */\n}\n\n#chart {\n  height: 400px;\n  /* 你可以不用设置宽度，它会自动填充.chart-container的宽度 */\n}</style>\n"],"mappings":"AASA,OAAAA,KAAA;AACA,YAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACA;MACAN,KAAA,CAAAQ,GAAA,2BACAC,IAAA,CAAAC,QAAA;QACA;QACA,KAAAN,SAAA,GAAAM,QAAA,CAAAP,IAAA,CAAAQ,GAAA,CAAAC,IAAA;UACAV,IAAA,EAAAU,IAAA,CAAAC,YAAA;UAAA;UACAC,KAAA,EAAAF,IAAA,CAAAG,IAAA;QACA;QACA,KAAAC,WAAA;MACA,GACAC,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;IACA;IACAF,YAAA;MACA,MAAAI,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,OAAA,GAAAtB,OAAA,CAAAuB,IAAA,CAAAJ,QAAA;MACA,MAAAK,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA;QACA;QACAC,MAAA;UACAC,IAAA;QACA;QACAC,MAAA,GACA;UACA7B,IAAA;UACA8B,IAAA;UACAC,MAAA;UACAC,MAAA;UACA/B,IAAA,OAAAC,SAAA;UACA+B,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;UACAC,KAAA;YACAC,QAAA;YACAC,OAAA;YACAC,WAAA;UACA;UACA;UACAC,SAAA;YACAC,MAAA;YACAC,OAAA;UACA;QACA;MAEA;MACAvB,OAAA,CAAAwB,SAAA,CAAAtB,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
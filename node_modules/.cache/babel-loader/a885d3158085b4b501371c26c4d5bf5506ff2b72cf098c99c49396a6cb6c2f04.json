{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    };\n  },\n  mounted() {\n    console.log(\"Component mounted, loading chart data...\");\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('/mining_area_data.json') // 更改为JSON文件的实际路径\n      .then(response => {\n        response.data.forEach(row => {\n          this.chartData.countries.push(row.COUNTRY_NAME);\n          this.chartData.areas.push(row.AREA);\n        });\n        this.createChart();\n      }).catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [{\n          name: '矿区面积',\n          type: 'pie',\n          radius: '50%',\n          // 饼图的半径\n          data: this.chartData.map(item => ({\n            value: item.area,\n            name: item.country\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","name","data","chartData","countries","areas","mounted","console","log","loadChartData","methods","get","then","response","forEach","row","push","COUNTRY_NAME","AREA","createChart","catch","error","chartDom","document","getElementById","myChart","init","option","tooltip","trigger","legend","top","left","series","type","radius","map","item","value","area","country","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption"],"sources":["src/components/MiningAreaChart.vue"],"sourcesContent":["\n<template>\n  <div class=\"chart-container\">\n    <h2>矿区面积分布</h2>\n    <div id=\"chart\" style=\"height: 400px; width: 100%;\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    }\n  },\n  mounted() {\n    console.log(\"Component mounted, loading chart data...\");\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('/mining_area_data.json') // 更改为JSON文件的实际路径\n        .then(response => {\n          response.data.forEach(row => {\n            this.chartData.countries.push(row.COUNTRY_NAME);\n            this.chartData.areas.push(row.AREA);\n          });\n          this.createChart();\n        })\n        .catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chartDom = document.getElementById('chart');\n      const myChart = echarts.init(chartDom);\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [\n          {\n            name: '矿区面积',\n            type: 'pie',\n            radius: '50%', // 饼图的半径\n            data: this.chartData.map(item => ({\n              value: item.area,\n              name: item.country\n            })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n      myChart.setOption(option);\n    }\n  }\n}\n</script>\n\n<style>\n.chart-container {\n  width: 100%;\n  /* 设置容器宽度为100% */\n  max-width: 1280px;\n  /* 或者设置一个最大宽度 */\n  margin: auto;\n  /* 若需要居中显示 */\n}\n\n#chart {\n  height: 400px;\n  /* 你可以不用设置宽度，它会自动填充.chart-container的宽度 */\n}</style>\n"],"mappings":";AASA,OAAAA,KAAA;AACA,YAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,SAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAV,KAAA,CAAAY,GAAA;MAAA,CACAC,IAAA,CAAAC,QAAA;QACAA,QAAA,CAAAX,IAAA,CAAAY,OAAA,CAAAC,GAAA;UACA,KAAAZ,SAAA,CAAAC,SAAA,CAAAY,IAAA,CAAAD,GAAA,CAAAE,YAAA;UACA,KAAAd,SAAA,CAAAE,KAAA,CAAAW,IAAA,CAAAD,GAAA,CAAAG,IAAA;QACA;QACA,KAAAC,WAAA;MACA,GACAC,KAAA,CAAAC,KAAA,IAAAd,OAAA,CAAAc,KAAA,iCAAAA,KAAA;IACA;IACAF,YAAA;MACA,MAAAG,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,OAAA,GAAAzB,OAAA,CAAA0B,IAAA,CAAAJ,QAAA;MACA,MAAAK,MAAA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAC,GAAA;UACAC,IAAA;QACA;QACAC,MAAA,GACA;UACAhC,IAAA;UACAiC,IAAA;UACAC,MAAA;UAAA;UACAjC,IAAA,OAAAC,SAAA,CAAAiC,GAAA,CAAAC,IAAA;YACAC,KAAA,EAAAD,IAAA,CAAAE,IAAA;YACAtC,IAAA,EAAAoC,IAAA,CAAAG;UACA;UACAC,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;MACApB,OAAA,CAAAqB,SAAA,CAAAnB,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
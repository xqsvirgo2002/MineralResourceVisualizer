{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'GlobalMineralProduction',\n  // 你可以在这里添加任何需要的data属性、methods等\n  data() {\n    return {\n      chartInstance: null,\n      chartData: null\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      // 加载JSON文件，这里的路径应该指向您的JSON文件\n      import('@/assets/output.json').then(data => {\n        this.chartData = data.default;\n        this.initChart();\n      });\n    },\n    initChart() {\n      const chartDom = this.$refs.GlobalMineralProduction;\n      this.chartInstance = echarts.init(chartDom);\n      const options = {\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            // 只显示横坐标信息\n            return params[0].axisValue;\n          }\n        },\n        legend: {\n          data: Object.keys(this.chartData) // 假设每个工作表的名称是图例名称\n        },\n        xAxis: {\n          type: 'category',\n          data: this.getCategories()\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: this.getSeriesData()\n      };\n      this.chartInstance.setOption(options);\n    },\n    getCategories() {\n      // 假设使用第一个工作表的所有国家作为类别\n      const firstSheetData = this.chartData[Object.keys(this.chartData)[0]];\n      return firstSheetData.map(item => item.Country);\n    },\n    getSeriesData() {\n      // 生成每个工作表的数据系列\n      return Object.keys(this.chartData).map(sheetName => {\n        return {\n          name: sheetName,\n          type: 'bar',\n          stack: 'total',\n          data: this.chartData[sheetName].map(item => item['2021']) // 假设我们使用2021年的数据\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","chartInstance","chartData","mounted","loadChartData","methods","then","default","initChart","chartDom","$refs","GlobalMineralProduction","init","options","tooltip","trigger","formatter","params","axisValue","legend","Object","keys","xAxis","type","getCategories","yAxis","series","getSeriesData","setOption","firstSheetData","map","item","Country","sheetName","stack"],"sources":["src/components/GlobalMineralProduction.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Global Mineral Production Test</h1>\n      <div ref=\"GlobalMineralProduction\" style=\"width: 100%; height: 500px;\"></div>\n    </div>\n  </template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  export default {\n    name: 'GlobalMineralProduction',\n    // 你可以在这里添加任何需要的data属性、methods等\n    data() {\n      return {\n        chartInstance: null,\n        chartData: null\n      };\n    },\n    mounted() {\n      this.loadChartData();\n    },\n    methods: {\n      loadChartData() {\n        // 加载JSON文件，这里的路径应该指向您的JSON文件\n        import('@/assets/output.json').then(data => {\n          this.chartData = data.default;\n          this.initChart();\n        });\n      },\n      initChart() {\n        const chartDom = this.$refs.GlobalMineralProduction;\n        this.chartInstance = echarts.init(chartDom);\n  \n        const options = {\n            tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            // 只显示横坐标信息\n            return params[0].axisValue;\n          }\n          },\n          legend: {\n            data: Object.keys(this.chartData) // 假设每个工作表的名称是图例名称\n          },\n          xAxis: {\n            type: 'category',\n            data: this.getCategories()\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: this.getSeriesData()\n        };\n  \n        this.chartInstance.setOption(options);\n      },\n      getCategories() {\n        // 假设使用第一个工作表的所有国家作为类别\n        const firstSheetData = this.chartData[Object.keys(this.chartData)[0]];\n        return firstSheetData.map(item => item.Country);\n      },\n      getSeriesData() {\n        // 生成每个工作表的数据系列\n        return Object.keys(this.chartData).map(sheetName => {\n          return {\n            name: sheetName,\n            type: 'bar',\n            stack: 'total',\n            data: this.chartData[sheetName].map(item => item['2021']) // 假设我们使用2021年的数据\n          };\n        });\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 你可以在这里添加任何需要的样式 */\n  </style>\n\n"],"mappings":"AAQA,YAAAA,OAAA;AACA;EACAC,IAAA;EACA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACA;MACA,+BAAAE,IAAA,CAAAN,IAAA;QACA,KAAAE,SAAA,GAAAF,IAAA,CAAAO,OAAA;QACA,KAAAC,SAAA;MACA;IACA;IACAA,UAAA;MACA,MAAAC,QAAA,QAAAC,KAAA,CAAAC,uBAAA;MACA,KAAAV,aAAA,GAAAH,OAAA,CAAAc,IAAA,CAAAH,QAAA;MAEA,MAAAI,OAAA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA,WAAAA,CAAAC,MAAA;YACA;YACA,OAAAA,MAAA,IAAAC,SAAA;UACA;QACA;QACAC,MAAA;UACAnB,IAAA,EAAAoB,MAAA,CAAAC,IAAA,MAAAnB,SAAA;QACA;QACAoB,KAAA;UACAC,IAAA;UACAvB,IAAA,OAAAwB,aAAA;QACA;QACAC,KAAA;UACAF,IAAA;QACA;QACAG,MAAA,OAAAC,aAAA;MACA;MAEA,KAAA1B,aAAA,CAAA2B,SAAA,CAAAf,OAAA;IACA;IACAW,cAAA;MACA;MACA,MAAAK,cAAA,QAAA3B,SAAA,CAAAkB,MAAA,CAAAC,IAAA,MAAAnB,SAAA;MACA,OAAA2B,cAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,OAAA;IACA;IACAL,cAAA;MACA;MACA,OAAAP,MAAA,CAAAC,IAAA,MAAAnB,SAAA,EAAA4B,GAAA,CAAAG,SAAA;QACA;UACAlC,IAAA,EAAAkC,SAAA;UACAV,IAAA;UACAW,KAAA;UACAlC,IAAA,OAAAE,SAAA,CAAA+B,SAAA,EAAAH,GAAA,CAAAC,IAAA,IAAAA,IAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
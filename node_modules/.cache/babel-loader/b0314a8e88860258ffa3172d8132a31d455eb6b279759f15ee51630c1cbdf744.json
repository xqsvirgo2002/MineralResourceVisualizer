{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MineralProductionByCountries',\n  data() {\n    return {\n      chart: null\n    };\n  },\n  mounted() {\n    this.loadDataAndDrawChart();\n  },\n  methods: {\n    async loadDataAndDrawChart() {\n      try {\n        // 加载 JSON 数据\n        const response = await import('@/assets/newdata.json'); // 替换为您的 JSON 文件路径\n        const data = response.default;\n        this.drawChart(data);\n      } catch (error) {\n        console.error('Failed to load data:', error);\n      }\n    },\n    drawChart(data) {\n      // 初始化 ECharts 实例\n      this.chart = echarts.init(this.$refs.boxplot);\n\n      // 准备箱线图数据\n      const categories = Object.keys(data);\n      const seriesData = [];\n      categories.forEach(category => {\n        const values = [];\n        for (let year = 2017; year <= 2021; year++) {\n          values.push(data[category][year.toString()]);\n        }\n        seriesData.push(values);\n      });\n\n      // ECharts 箱线图配置\n      const option = {\n        title: {\n          text: 'Production of Mineral Raw Materials by Countries'\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: categories\n        },\n        yAxis: {\n          type: 'value',\n          name: 'Production'\n        },\n        series: [{\n          name: 'Production',\n          type: 'boxplot',\n          data: seriesData\n        }]\n      };\n\n      // 设置图表配置\n      this.chart.setOption(option);\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","chart","mounted","loadDataAndDrawChart","methods","response","default","drawChart","error","console","init","$refs","boxplot","categories","Object","keys","seriesData","forEach","category","values","year","push","toString","option","title","text","tooltip","trigger","axisPointer","type","xAxis","yAxis","series","setOption","beforeDestroy","dispose"],"sources":["src/components/MineralProductionByCountries.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Production of Mineral Raw Materials by Countries</h1>\n      <div ref=\"boxplot\" style=\"width: 100%; height: 600px;\"></div>\n    </div>\n  </template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n    name: 'MineralProductionByCountries',\n    data() {\n      return {\n        chart: null,\n      };\n    },\n    mounted() {\n      this.loadDataAndDrawChart();\n    },\n    methods: {\n      async loadDataAndDrawChart() {\n        try {\n          // 加载 JSON 数据\n          const response = await import('@/assets/newdata.json'); // 替换为您的 JSON 文件路径\n          const data = response.default;\n          this.drawChart(data);\n        } catch (error) {\n          console.error('Failed to load data:', error);\n        }\n      },\n      drawChart(data) {\n        // 初始化 ECharts 实例\n        this.chart = echarts.init(this.$refs.boxplot);\n  \n        // 准备箱线图数据\n        const categories = Object.keys(data);\n        const seriesData = [];\n  \n        categories.forEach(category => {\n          const values = [];\n          for (let year = 2017; year <= 2021; year++) {\n            values.push(data[category][year.toString()]);\n          }\n          seriesData.push(values);\n        });\n  \n        // ECharts 箱线图配置\n        const option = {\n          title: {\n            text: 'Production of Mineral Raw Materials by Countries',\n          },\n          tooltip: {\n            trigger: 'item',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          xAxis: {\n            type: 'category',\n            data: categories\n          },\n          yAxis: {\n            type: 'value',\n            name: 'Production'\n          },\n          series: [\n            {\n              name: 'Production',\n              type: 'boxplot',\n              data: seriesData\n            }\n          ]\n        };\n  \n        // 设置图表配置\n        this.chart.setOption(option);\n      }\n    },\n    beforeDestroy() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 添加样式 */\n  </style>\n  "],"mappings":";AAQA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,oBAAA;EACA;EACAC,OAAA;IACA,MAAAD,qBAAA;MACA;QACA;QACA,MAAAE,QAAA;QACA,MAAAL,IAAA,GAAAK,QAAA,CAAAC,OAAA;QACA,KAAAC,SAAA,CAAAP,IAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;IACAD,UAAAP,IAAA;MACA;MACA,KAAAC,KAAA,GAAAH,OAAA,CAAAY,IAAA,MAAAC,KAAA,CAAAC,OAAA;;MAEA;MACA,MAAAC,UAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAf,IAAA;MACA,MAAAgB,UAAA;MAEAH,UAAA,CAAAI,OAAA,CAAAC,QAAA;QACA,MAAAC,MAAA;QACA,SAAAC,IAAA,SAAAA,IAAA,UAAAA,IAAA;UACAD,MAAA,CAAAE,IAAA,CAAArB,IAAA,CAAAkB,QAAA,EAAAE,IAAA,CAAAE,QAAA;QACA;QACAN,UAAA,CAAAK,IAAA,CAAAF,MAAA;MACA;;MAEA;MACA,MAAAI,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;UACA;QACA;QACAC,KAAA;UACAD,IAAA;UACA7B,IAAA,EAAAa;QACA;QACAkB,KAAA;UACAF,IAAA;UACA9B,IAAA;QACA;QACAiC,MAAA,GACA;UACAjC,IAAA;UACA8B,IAAA;UACA7B,IAAA,EAAAgB;QACA;MAEA;;MAEA;MACA,KAAAf,KAAA,CAAAgC,SAAA,CAAAV,MAAA;IACA;EACA;EACAW,cAAA;IACA,SAAAjC,KAAA;MACA,KAAAA,KAAA,CAAAkC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
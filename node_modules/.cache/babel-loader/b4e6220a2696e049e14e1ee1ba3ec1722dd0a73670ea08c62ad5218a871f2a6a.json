{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'MineralProductionChart',\n  data() {\n    return {\n      mineralData: {\n        \"Commodity\": [\"Aluminium\", \"Bauxite\", \"Copper\", \"Lead\", \"Zinc\"],\n        \"2017\": [60544944, 311864443, 20083860, 4654192, 11898987],\n        \"2018\": [64443050, 337375396, 20701144, 4629440, 12257076],\n        \"2019\": [63214479, 361800355, 20649981, 4941593, 13081570],\n        \"2020\": [65381119, 378992038, 20855700, 4745630, 12668276],\n        \"2021\": [67668825, 379850872, 21415370, 4680596, 12928724]\n      }\n    };\n  },\n  mounted() {\n    this.mineralChartInstance = echarts.init(this.$refs.mineralChart);\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      const option = {\n        // ECharts 配置项\n        // 以您的数据为基础创建ECharts图表\n        xAxis: {\n          type: 'category',\n          data: this.mineralData.Commodity\n        },\n        yAxis: {\n          type: 'value'\n        },\n        tooltip: {\n          trigger: 'axis',\n          // 设置tooltip的触发方式，'axis'表示鼠标悬停在坐标轴上时显示tooltip\n          formatter: function (params) {\n            // 在tooltip中显示详细内容\n            let content = params[0].name + '<br/>';\n            params.forEach(function (item) {\n              content += item.seriesName + ': ' + item.value + '<br/>';\n            });\n            return content;\n          }\n        },\n        series: [{\n          data: this.mineralData['2017'],\n          type: 'bar',\n          name: '2017'\n        }, {\n          data: this.mineralData['2018'],\n          type: 'bar',\n          name: '2018'\n        }, {\n          data: this.mineralData['2019'],\n          type: 'bar',\n          name: '2019'\n        }, {\n          data: this.mineralData['2020'],\n          type: 'bar',\n          name: '2020'\n        }, {\n          data: this.mineralData['2021'],\n          type: 'bar',\n          name: '2021'\n        }]\n      };\n      this.mineralChartInstance.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","mineralData","mounted","mineralChartInstance","init","$refs","mineralChart","initChart","methods","option","xAxis","type","Commodity","yAxis","tooltip","trigger","formatter","params","content","forEach","item","seriesName","value","series","setOption"],"sources":["src/components/GlobalMineralChart.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Mineral Production Chart</h1>\n        <div ref=\"mineralChart\" class=\"chart\"></div>\n    </div>\n</template>\n  \n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    name: 'MineralProductionChart',\n    data() {\n        return {\n            mineralData: {\n                \"Commodity\": [\n                    \"Aluminium\", \"Bauxite\", \"Copper\", \"Lead\", \"Zinc\"\n                ],\n                \"2017\": [60544944, 311864443, 20083860, 4654192, 11898987],\n                \"2018\": [64443050, 337375396, 20701144, 4629440, 12257076],\n                \"2019\": [63214479, 361800355, 20649981, 4941593, 13081570],\n                \"2020\": [65381119, 378992038, 20855700, 4745630, 12668276],\n                \"2021\": [67668825, 379850872, 21415370, 4680596, 12928724]\n            }\n        };\n    },\n    mounted() {\n        this.mineralChartInstance = echarts.init(this.$refs.mineralChart);\n        this.initChart();\n    },\n    methods: {\n        initChart() {\n            const option = {\n                // ECharts 配置项\n                // 以您的数据为基础创建ECharts图表\n                xAxis: {\n                    type: 'category',\n                    data: this.mineralData.Commodity\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                tooltip: {\n                    trigger: 'axis', // 设置tooltip的触发方式，'axis'表示鼠标悬停在坐标轴上时显示tooltip\n                    formatter: function (params) {\n                        // 在tooltip中显示详细内容\n                        let content = params[0].name + '<br/>';\n                        params.forEach(function (item) {\n                            content += item.seriesName + ': ' + item.value + '<br/>';\n                        });\n                        return content;\n                    }\n                },\n                series: [\n                    {\n                        data: this.mineralData['2017'],\n                        type: 'bar',\n                        name: '2017'\n                    },\n                    {\n                        data: this.mineralData['2018'],\n                        type: 'bar',\n                        name: '2018'\n                    },\n                    {\n                        data: this.mineralData['2019'],\n                        type: 'bar',\n                        name: '2019'\n                    },\n                    {\n                        data: this.mineralData['2020'],\n                        type: 'bar',\n                        name: '2020'\n                    },\n                    {\n                        data: this.mineralData['2021'],\n                        type: 'bar',\n                        name: '2021'\n                    }\n                ]\n            };\n\n            this.mineralChartInstance.setOption(option);\n        }\n    }\n};\n</script>\n  \n<style scoped>\n.chart {\n    width: 100%;\n    height: 400px;\n}\n</style>\n  "],"mappings":"AAQA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;QACA,cACA,iDACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,oBAAA,GAAAL,OAAA,CAAAM,IAAA,MAAAC,KAAA,CAAAC,YAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,MAAAE,MAAA;QACA;QACA;QACAC,KAAA;UACAC,IAAA;UACAX,IAAA,OAAAC,WAAA,CAAAW;QACA;QACAC,KAAA;UACAF,IAAA;QACA;QACAG,OAAA;UACAC,OAAA;UAAA;UACAC,SAAA,WAAAA,CAAAC,MAAA;YACA;YACA,IAAAC,OAAA,GAAAD,MAAA,IAAAlB,IAAA;YACAkB,MAAA,CAAAE,OAAA,WAAAC,IAAA;cACAF,OAAA,IAAAE,IAAA,CAAAC,UAAA,UAAAD,IAAA,CAAAE,KAAA;YACA;YACA,OAAAJ,OAAA;UACA;QACA;QACAK,MAAA,GACA;UACAvB,IAAA,OAAAC,WAAA;UACAU,IAAA;UACAZ,IAAA;QACA,GACA;UACAC,IAAA,OAAAC,WAAA;UACAU,IAAA;UACAZ,IAAA;QACA,GACA;UACAC,IAAA,OAAAC,WAAA;UACAU,IAAA;UACAZ,IAAA;QACA,GACA;UACAC,IAAA,OAAAC,WAAA;UACAU,IAAA;UACAZ,IAAA;QACA,GACA;UACAC,IAAA,OAAAC,WAAA;UACAU,IAAA;UACAZ,IAAA;QACA;MAEA;MAEA,KAAAI,oBAAA,CAAAqB,SAAA,CAAAf,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
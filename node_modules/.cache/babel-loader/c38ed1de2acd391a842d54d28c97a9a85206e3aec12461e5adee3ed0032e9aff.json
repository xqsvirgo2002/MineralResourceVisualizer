{"ast":null,"code":"import axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    };\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('Global_mining/mining_area_data.json') // 确保路径正确\n      .then(response => {\n        this.chartData.countries = response.data.map(row => row.COUNTRY_NAME);\n        this.chartData.areas = response.data.map(row => parseFloat(row.AREA));\n        this.createChart();\n      }).catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chart = echarts.init(document.getElementById('chart'));\n      const option = {\n        title: {\n          text: '各国矿区面积'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: this.chartData.countries\n        },\n        yAxis: {\n          type: 'value',\n          name: '面积 (平方公里)'\n        },\n        series: [{\n          type: 'bar',\n          data: this.chartData.areas,\n          barWidth: '60%'\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","name","data","chartData","countries","areas","mounted","loadChartData","methods","get","then","response","map","row","COUNTRY_NAME","parseFloat","AREA","createChart","catch","error","console","chart","init","document","getElementById","option","title","text","tooltip","trigger","axisPointer","type","xAxis","yAxis","series","barWidth","setOption"],"sources":["src/components/MiningAreaChart.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>矿区面积分布</h2>\n    <div id=\"chart\" style=\"height: 400px;\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'MiningAreaChart',\n  data() {\n    return {\n      chartData: {\n        countries: [],\n        areas: []\n      }\n    }\n  },\n  mounted() {\n    this.loadChartData();\n  },\n  methods: {\n    loadChartData() {\n      axios.get('Global_mining/mining_area_data.json') // 确保路径正确\n        .then(response => {\n          this.chartData.countries = response.data.map(row => row.COUNTRY_NAME);\n          this.chartData.areas = response.data.map(row => parseFloat(row.AREA));\n          this.createChart();\n        })\n        .catch(error => console.error('Error loading the JSON file:', error));\n    },\n    createChart() {\n      const chart = echarts.init(document.getElementById('chart'));\n      const option = {\n        title: {\n          text: '各国矿区面积'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: this.chartData.countries\n        },\n        yAxis: {\n          type: 'value',\n          name: '面积 (平方公里)'\n        },\n        series: [{\n          type: 'bar',\n          data: this.chartData.areas,\n          barWidth: '60%'\n        }]\n      };\n\n      chart.setOption(option);\n    }\n  }\n}\n</script>\n\n<style>\n/* 可根据需求添加样式 */\n</style>\n"],"mappings":"AAQA,OAAAA,KAAA;AACA,YAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,SAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACAR,KAAA,CAAAU,GAAA;MAAA,CACAC,IAAA,CAAAC,QAAA;QACA,KAAAR,SAAA,CAAAC,SAAA,GAAAO,QAAA,CAAAT,IAAA,CAAAU,GAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,YAAA;QACA,KAAAX,SAAA,CAAAE,KAAA,GAAAM,QAAA,CAAAT,IAAA,CAAAU,GAAA,CAAAC,GAAA,IAAAE,UAAA,CAAAF,GAAA,CAAAG,IAAA;QACA,KAAAC,WAAA;MACA,GACAC,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;IACA;IACAF,YAAA;MACA,MAAAI,KAAA,GAAArB,OAAA,CAAAsB,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;UACA;QACA;QACAC,KAAA;UACAD,IAAA;UACA7B,IAAA,OAAAC,SAAA,CAAAC;QACA;QACA6B,KAAA;UACAF,IAAA;UACA9B,IAAA;QACA;QACAiC,MAAA;UACAH,IAAA;UACA7B,IAAA,OAAAC,SAAA,CAAAE,KAAA;UACA8B,QAAA;QACA;MACA;MAEAd,KAAA,CAAAe,SAAA,CAAAX,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
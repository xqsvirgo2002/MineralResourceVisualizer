{"ast":null,"code":"import * as echarts from 'echarts';\nimport mineralsData from '@/assets/minerals_production.json'; // 根据实际路径更新\nimport { Dialog } from 'element-ui';\nexport default {\n  name: 'WorldMap',\n  components: {\n    ElDialog: Dialog\n  },\n  data() {\n    return {\n      selectedCountry: '',\n      selectedCountryMinerals: [],\n      dialogVisible: false,\n      searchQuery: ''\n    };\n  },\n  mounted() {\n    import('@/assets/world.js').then(() => {\n      var chart = echarts.init(document.getElementById('map'));\n      var option = {\n        series: [{\n          type: 'map',\n          map: 'world'\n        }]\n      };\n      chart.setOption(option);\n      chart.on('click', this.handleCountryClick);\n    });\n  },\n  methods: {\n    handleBeforeClose(done) {\n      this.dialogVisible = false;\n      done();\n    },\n    handleCountryClick(params) {\n      this.selectedCountry = params.name;\n      this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n      this.dialogVisible = true;\n    },\n    searchCountry() {\n      if (!this.searchQuery) return;\n      this.selectedCountry = this.searchQuery;\n      this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n      this.dialogVisible = true;\n\n      // 这里应添加定位国家的逻辑\n    }\n  }\n};","map":{"version":3,"names":["echarts","mineralsData","Dialog","name","components","ElDialog","data","selectedCountry","selectedCountryMinerals","dialogVisible","searchQuery","mounted","then","chart","init","document","getElementById","option","series","type","map","setOption","on","handleCountryClick","methods","handleBeforeClose","done","params","searchCountry"],"sources":["src/components/WorldMap.vue"],"sourcesContent":["<template>\n    <div class=\"map-container\">\n        <div class=\"search-container\">\n            <el-input v-model=\"searchQuery\" placeholder=\"输入国家名称\" class=\"search-input\"\n                @keyup.enter=\"searchCountry\"></el-input>\n            <el-button type=\"primary\" @click=\"searchCountry\">搜索</el-button>\n        </div>\n        <div id=\"map\"></div>\n        <el-dialog :visible.sync=\"dialogVisible\" :title=\"selectedCountry + ' 的矿产资源(单位：吨/立方米)'\" width=\"60%\"\n            :before-close=\"handleBeforeClose\" class=\"custom-dialog\">\n            <div v-if=\"selectedCountryMinerals.length\">\n                <ul class=\"mineral-list\">\n                    <li v-for=\"mineral in selectedCountryMinerals\" :key=\"mineral.Minerals\">\n                        {{ mineral.Minerals }}: {{ mineral.Production }}\n                    </li>\n                </ul>\n            </div>\n            <div v-else>\n                <p>未记录该国家矿产资源的信息。</p>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport mineralsData from '@/assets/minerals_production.json'; // 根据实际路径更新\nimport { Dialog } from 'element-ui';\n\nexport default {\n    name: 'WorldMap',\n    components: {\n        ElDialog: Dialog\n    },\n    data() {\n        return {\n            selectedCountry: '',\n            selectedCountryMinerals: [],\n            dialogVisible: false,\n            searchQuery: ''\n        };\n    },\n    mounted() {\n        import('@/assets/world.js').then(() => {\n            var chart = echarts.init(document.getElementById('map'));\n            var option = {\n                series: [\n                    {\n                        type: 'map',\n                        map: 'world',\n                    }\n                ]\n            };\n            chart.setOption(option);\n            chart.on('click', this.handleCountryClick);\n        });\n    },\n    methods: {\n        handleBeforeClose(done) {\n            this.dialogVisible = false;\n            done();\n        },\n        handleCountryClick(params) {\n            this.selectedCountry = params.name;\n            this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n            this.dialogVisible = true;\n        },\n        searchCountry() {\n            if (!this.searchQuery) return;\n\n            this.selectedCountry = this.searchQuery;\n            this.selectedCountryMinerals = mineralsData[this.selectedCountry] || [];\n            this.dialogVisible = true;\n\n            // 这里应添加定位国家的逻辑\n        }\n    }\n}\n</script>\n<style>\n.search-container {\n    padding: 20px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.search-input {\n    margin-right: 10px;\n}\n\n.custom-dialog .el-dialog {\n    background-color: #f5f5f5;\n    /* 设置对话框背景颜色为浅灰色 */\n    border-radius: 8px;\n}\n\n.custom-dialog .el-dialog__header {\n    color: #333;\n    font-size: 18px;\n}\n\n.custom-dialog .el-dialog__body {\n    font-size: 16px;\n    color: #343434c6;\n}\n\n.mineral-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n.mineral-list li {\n    margin: 10px 0;\n    font-weight: bold;\n}\n\n.map-container {\n    display: flex;\n    flex-direction: column;\n    /* 垂直布局 */\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n}\n\n#map {\n    width: 1000px;\n    height: 800px;\n    margin-top: -20px;\n    /* 下移地图 /\nz-index: 1; / 地图在搜索栏下方 */\n}\n</style>"],"mappings":"AAyBA,YAAAA,OAAA;AACA,OAAAC,YAAA;AACA,SAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAC,QAAA,EAAAH;EACA;EACAI,KAAA;IACA;MACAC,eAAA;MACAC,uBAAA;MACAC,aAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,4BAAAC,IAAA;MACA,IAAAC,KAAA,GAAAb,OAAA,CAAAc,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,MAAA;QACAC,MAAA,GACA;UACAC,IAAA;UACAC,GAAA;QACA;MAEA;MACAP,KAAA,CAAAQ,SAAA,CAAAJ,MAAA;MACAJ,KAAA,CAAAS,EAAA,eAAAC,kBAAA;IACA;EACA;EACAC,OAAA;IACAC,kBAAAC,IAAA;MACA,KAAAjB,aAAA;MACAiB,IAAA;IACA;IACAH,mBAAAI,MAAA;MACA,KAAApB,eAAA,GAAAoB,MAAA,CAAAxB,IAAA;MACA,KAAAK,uBAAA,GAAAP,YAAA,MAAAM,eAAA;MACA,KAAAE,aAAA;IACA;IACAmB,cAAA;MACA,UAAAlB,WAAA;MAEA,KAAAH,eAAA,QAAAG,WAAA;MACA,KAAAF,uBAAA,GAAAP,YAAA,MAAAM,eAAA;MACA,KAAAE,aAAA;;MAEA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
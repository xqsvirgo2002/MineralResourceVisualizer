{"ast":null,"code":"export default {\n  name: 'GlobalMineralProduction'\n  // 你可以在这里添加任何需要的data属性、methods等\n};","map":{"version":3,"names":["name"],"sources":["src/components/GlobalMineralProduction.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Global Mineral Production Test</h1>\n      <p>如果你可以看到这段文字，说明路由跳转和组件加载是正常的。</p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'GlobalMineralProduction',\n    // 你可以在这里添加任何需要的data属性、methods等\n  };\n  </script>\n  \n  <style scoped>\n  /* 你可以在这里添加任何需要的样式 */\n  </style>\n\n<!-- <template>\n    <div>\n        <h1>Global Mineral Chart</h1>\n      <div ref=\"GlobalMineralProduction\" style=\"width: 100%; height: 500px;\"></div>\n    </div>\n  </template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n    name: 'GlobalMineralProduction',\n    data() {\n      return {\n        chartInstance: null,\n        chartData: null\n      };\n    },\n    mounted() {\n      this.loadChartData();\n    },\n    methods: {\n      loadChartData() {\n        // 加载JSON文件，这里的路径应该指向您的JSON文件\n        import('src/assets/mineral_production_data.json').then(data => {\n          this.chartData = data.default;\n          this.initChart();\n        });\n      },\n      initChart() {\n        const chartDom = this.$refs.GlobalMineralProduction;\n        this.chartInstance = echarts.init(chartDom);\n  \n        const options = {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          legend: {\n            data: Object.keys(this.chartData) // 假设每个工作表的名称是图例名称\n          },\n          xAxis: {\n            type: 'category',\n            data: this.getCategories()\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: this.getSeriesData()\n        };\n  \n        this.chartInstance.setOption(options);\n      },\n      getCategories() {\n        // 假设使用第一个工作表的所有国家作为类别\n        const firstSheetData = this.chartData[Object.keys(this.chartData)[0]];\n        return firstSheetData.map(item => item.Country);\n      },\n      getSeriesData() {\n        // 生成每个工作表的数据系列\n        return Object.keys(this.chartData).map(sheetName => {\n          return {\n            name: sheetName,\n            type: 'bar',\n            stack: 'total',\n            data: this.chartData[sheetName].map(item => item['2021']) // 假设我们使用2021年的数据\n          };\n        });\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  </style> -->"],"mappings":"AAQA;EACAA,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
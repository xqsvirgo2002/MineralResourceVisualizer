{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'MineralProductionByCountries',\n  data() {\n    return {\n      chart: null\n    };\n  },\n  mounted() {\n    this.loadDataAndDrawChart();\n  },\n  methods: {\n    async loadDataAndDrawChart() {\n      try {\n        // 加载 JSON 数据\n        const response = await import('@/assets/newdata.json'); // 替换为您的 JSON 文件路径\n        const data = response.default;\n        this.drawChart(data);\n      } catch (error) {\n        console.error('Failed to load data:', error);\n      }\n    },\n    drawChart(data) {\n      // 初始化 ECharts 实例\n      this.chart = echarts.init(this.$refs.boxplot);\n\n      // 准备箱线图数据\n      const seriesData = Object.values(data);\n      const categories = Object.keys(data);\n\n      // ECharts 箱线图配置\n      const option = {\n        title: {\n          text: '不同国家矿物原材料生产量分布箱线图'\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: categories\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '生产量',\n          type: 'boxplot',\n          data: seriesData\n        }]\n      };\n\n      // 设置图表配置\n      this.chart.setOption(option);\n    }\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","chart","mounted","loadDataAndDrawChart","methods","response","default","drawChart","error","console","init","$refs","boxplot","seriesData","Object","values","categories","keys","option","title","text","tooltip","trigger","axisPointer","type","xAxis","yAxis","series","setOption","beforeDestroy","dispose"],"sources":["src/components/MineralProductionByCountries.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>矿物原材料生产量分布</h1>\n        <div ref=\"boxplot\" style=\"width: 100%; height: 600px;\"></div>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    name: 'MineralProductionByCountries',\n    data() {\n        return {\n            chart: null,\n        };\n    },\n    mounted() {\n        this.loadDataAndDrawChart();\n    },\n    methods: {\n        async loadDataAndDrawChart() {\n            try {\n                // 加载 JSON 数据\n                const response = await import('@/assets/newdata.json'); // 替换为您的 JSON 文件路径\n                const data = response.default;\n                this.drawChart(data);\n            } catch (error) {\n                console.error('Failed to load data:', error);\n            }\n        },\n        drawChart(data) {\n            // 初始化 ECharts 实例\n            this.chart = echarts.init(this.$refs.boxplot);\n\n            // 准备箱线图数据\n            const seriesData = Object.values(data);\n            const categories = Object.keys(data);\n\n            // ECharts 箱线图配置\n            const option = {\n                title: {\n                    text: '不同国家矿物原材料生产量分布箱线图',\n                },\n                tooltip: {\n                    trigger: 'item',\n                    axisPointer: {\n                        type: 'shadow'\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    data: categories\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        name: '生产量',\n                        type: 'boxplot',\n                        data: seriesData\n                    }\n                ]\n            };\n\n            // 设置图表配置\n            this.chart.setOption(option);\n        }\n    },\n    beforeDestroy() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    }\n};\n</script>\n\n<style scoped>\n/* 添加样式 */\n</style>\n"],"mappings":"AAQA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,oBAAA;EACA;EACAC,OAAA;IACA,MAAAD,qBAAA;MACA;QACA;QACA,MAAAE,QAAA;QACA,MAAAL,IAAA,GAAAK,QAAA,CAAAC,OAAA;QACA,KAAAC,SAAA,CAAAP,IAAA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;IACAD,UAAAP,IAAA;MACA;MACA,KAAAC,KAAA,GAAAH,OAAA,CAAAY,IAAA,MAAAC,KAAA,CAAAC,OAAA;;MAEA;MACA,MAAAC,UAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAf,IAAA;MACA,MAAAgB,UAAA,GAAAF,MAAA,CAAAG,IAAA,CAAAjB,IAAA;;MAEA;MACA,MAAAkB,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;UACA;QACA;QACAC,KAAA;UACAD,IAAA;UACAxB,IAAA,EAAAgB;QACA;QACAU,KAAA;UACAF,IAAA;QACA;QACAG,MAAA,GACA;UACA5B,IAAA;UACAyB,IAAA;UACAxB,IAAA,EAAAa;QACA;MAEA;;MAEA;MACA,KAAAZ,KAAA,CAAA2B,SAAA,CAAAV,MAAA;IACA;EACA;EACAW,cAAA;IACA,SAAA5B,KAAA;MACA,KAAAA,KAAA,CAAA6B,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}